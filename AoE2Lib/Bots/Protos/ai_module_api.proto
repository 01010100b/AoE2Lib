syntax = "proto3";
/**
 * RPC calls that are general to the AI Module and do not belong to any subsystem.
 */

package protos;

service AIModuleAPI {
  
  /**
   * Get the current match status to determine if match has been started or finished.
   */
  rpc GetMatchStatus(GetMatchStatusRequest) returns (GetMatchStatusReply) { }
  
  /**
   * Get the path to the game data (.dat) file that is being used by the game. Only available on AoC.
   */
  rpc GetGameDataFilePath(GetGameDataFilePathRequest) returns (GetGameDataFilePathReply) { }
  
  /**
   * Cancel any pending RPC calls, close the RPC server, remove detours and detach the AI Module from the game process.
   */
  rpc Unload(UnloadRequest) returns (UnloadReply) { }
}

/**
 * `GetMatchStatusRequest` call parameters.
 */
message GetMatchStatusRequest {
  
}
/**
 * `GetMatchStatusReply` call reply.
 */
message GetMatchStatusReply {
  enum MatchStatus {
    IN_PROGRESS = 0;
    FINISHED = 1;
    NO_MATCH = 2;
    LOADING = 3;
  }
  MatchStatus matchStatus = 1;
}

/**
 * `GetGameDataFilePathRequest` call parameters.
 */
message GetGameDataFilePathRequest {
  
}
/**
 * `GetGameDataFilePathRequest` call reply.
 */
message GetGameDataFilePathReply {
  string result = 1;
}

/**
 * `Unload` call parameters. Currently empty.
 */
message UnloadRequest {
  
}
/**
 * `Unload` call reply. Currently empty.
 */
message UnloadReply {
  
}
