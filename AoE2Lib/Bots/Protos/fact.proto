syntax = "proto3";
/**
 * Fact request and response definitions for use with Expert API subsystem `ExecuteCommandList` call.
 */

package protos.expert.fact;

/**
 * Retrieve the amount of player's land military units designated as attackers.
 */
message AttackSoldierCount {
  
}
/**
 * Response for the `AttackSoldierCount` fact.
 */
message AttackSoldierCountResult {
  int32 result = 1; // number of player's land military units designated as attackers
}

/**
 * Retrieve the amount of player's naval military units designated as attackers.
 */
message AttackWarboatCount {
  
}
/**
 * Response for the `AttackWarboatCount` fact.
 */
message AttackWarboatCountResult {
  int32 result = 1; // number of player's naval military units designated as attackers
}

/**
 * Check whether a building of certain type is available. This does not check if the player has the resources to build it.
 */
message BuildingAvailable {
  int32 inConstBuildingId = 1; // building type to check
}
/**
 * Response for the `BuildingAvailable` fact.
 */
message BuildingAvailableResult {
  bool result = 1; // whether the given building type is available
}

message BuildingCount {
  
}
message BuildingCountResult {
  int32 result = 1;
}

message BuildingCountTotal {
  
}
message BuildingCountTotalResult {
  int32 result = 1;
}

message BuildingTypeCount {
  int32 inConstBuildingId = 1;
}
message BuildingTypeCountResult {
  int32 result = 1;
}

message BuildingTypeCountTotal {
  int32 inConstBuildingId = 1;
}
message BuildingTypeCountTotalResult {
  int32 result = 1;
}

message CanAffordBuilding {
  int32 inConstBuildingId = 1;
}
message CanAffordBuildingResult {
  bool result = 1;
}

message CanAffordCompleteWall {
  int32 inConstPerimeter = 1;
  int32 inConstWallId = 2;
}
message CanAffordCompleteWallResult {
  bool result = 1;
}

message CanAffordResearch {
  int32 inConstTechId = 1;
}
message CanAffordResearchResult {
  bool result = 1;
}

message CanAffordUnit {
  int32 inConstUnitId = 1;
}
message CanAffordUnitResult {
  bool result = 1;
}

message CanBuild {
  int32 inConstBuildingId = 1;
}
message CanBuildResult {
  bool result = 1;
}

message CanBuildGate {
  int32 inConstPerimeter = 1;
}
message CanBuildGateResult {
  bool result = 1;
}

message CanBuildGateWithEscrow {
  int32 inConstPerimeter = 1;
}
message CanBuildGateWithEscrowResult {
  bool result = 1;
}

message CanBuildWall {
  int32 inConstPerimeter = 1;
  int32 inConstWallId = 2;
}
message CanBuildWallResult {
  bool result = 1;
}

message CanBuildWallWithEscrow {
  int32 inConstPerimeter = 1;
  int32 inConstWallId = 2;
}
message CanBuildWallWithEscrowResult {
  bool result = 1;
}

message CanBuildWithEscrow {
  int32 inConstBuildingId = 1;
}
message CanBuildWithEscrowResult {
  bool result = 1;
}

message CanBuyCommodity {
  int32 inConstCommodity = 1;
}
message CanBuyCommodityResult {
  bool result = 1;
}

message CanResearch {
  int32 inConstTechId = 1;
}
message CanResearchResult {
  bool result = 1;
}

message CanResearchWithEscrow {
  int32 inConstTechId = 1;
}
message CanResearchWithEscrowResult {
  bool result = 1;
}

message CanSellCommodity {
  int32 inConstCommodity = 1;
}
message CanSellCommodityResult {
  bool result = 1;
}

message CanSpy {
  
}
message CanSpyResult {
  bool result = 1;
}

message CanSpyWithEscrow {
  
}
message CanSpyWithEscrowResult {
  bool result = 1;
}

message CanTrain {
  int32 inConstUnitId = 1;
}
message CanTrainResult {
  bool result = 1;
}

message CanTrainWithEscrow {
  int32 inConstUnitId = 1;
}
message CanTrainWithEscrowResult {
  bool result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersBuildingCount {
  int32 inPlayerAnyPlayer = 1;
}
/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersBuildingCountResult {
  int32 result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersBuildingTypeCount {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstBuildingId = 2;
}
/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersBuildingTypeCountResult {
  int32 result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersUnitCount {
  int32 inPlayerAnyPlayer = 1;
}
/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersUnitCountResult {
  int32 result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersUnitTypeCount {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstUnitId = 2;
}
/**
 * Currently unimplemented in AoC version.
 */
message CcPlayersUnitTypeCountResult {
  int32 result = 1;
}

message CheatsEnabled {
  
}
message CheatsEnabledResult {
  bool result = 1;
}

message CivSelected {
  
}
message CivSelectedResult {
  int32 result = 1;
}

message CivilianPopulation {
  
}
message CivilianPopulationResult {
  int32 result = 1;
}

message CommodityBuyingPrice {
  int32 inConstCommodity = 1;
}
message CommodityBuyingPriceResult {
  int32 result = 1;
}

message CommoditySellingPrice {
  int32 inConstCommodity = 1;
}
message CommoditySellingPriceResult {
  int32 result = 1;
}

message CurrentAge {
  
}
message CurrentAgeResult {
  int32 result = 1;
}

message CurrentAgeTime {
  
}
message CurrentAgeTimeResult {
  int32 result = 1;
}

message CurrentScore {
  
}
message CurrentScoreResult {
  int32 result = 1;
}

message DeathMatchGame {
  
}
message DeathMatchGameResult {
  bool result = 1;
}

message DefendSoldierCount {
  
}
message DefendSoldierCountResult {
  int32 result = 1;
}

message DefendWarboatCount {
  
}
message DefendWarboatCountResult {
  int32 result = 1;
}

message Difficulty {
  
}
message DifficultyResult {
  int32 result = 1;
}

message Doctrine {
  int32 inConstValue = 1;
}
message DoctrineResult {
  bool result = 1;
}

message DropsiteMinDistance {
  int32 inConstResource = 1;
}
message DropsiteMinDistanceResult {
  int32 result = 1;
}

/**
 * Only available in DE.
 */
message EndingAge {
  
}
/**
 * Only available in DE.
 */
message EndingAgeResult {
  int32 result = 1;
}

message EnemyBuildingsInTown {
  
}
message EnemyBuildingsInTownResult {
  bool result = 1;
}

message EnemyCapturedRelics {
  
}
message EnemyCapturedRelicsResult {
  bool result = 1;
}

message EscrowAmount {
  int32 inConstResource = 1;
}
message EscrowAmountResult {
  int32 result = 1;
}

message EventDetected {
  int32 inConstEventType = 1;
  int32 inConstEventId = 2;
}
message EventDetectedResult {
  bool result = 1;
}

message False {
  
}
message FalseResult {
  bool result = 1;
}

/**
 * Only available in DE.
 */
message FeCanBuildAtPoint {
  int32 param1 = 1;
  int32 param2 = 2;
  int32 param3 = 3;
  int32 param4 = 4;
}
/**
 * Only available in DE.
 */
message FeCanBuildAtPointResult {
  bool result = 1;
}

/**
 * Only available in DE.
 */
message FeSubGameType {
  
}
/**
 * Only available in DE.
 */
message FeSubGameTypeResult {
  int32 result = 1;
}

message FoodAmount {
  
}
message FoodAmountResult {
  int32 result = 1;
}

message GameTime {
  
}
message GameTimeResult {
  int32 result = 1;
}

message GameType {
  
}
message GameTypeResult {
  int32 result = 1;
}

message GateCount {
  int32 inConstPerimeter = 1;
}
message GateCountResult {
  int32 result = 1;
}

message Goal {
  int32 inConstGoalId = 1;
}
message GoalResult {
  sint32 result = 1;
}

/**
 * Custom fact. Retrieve all goals as a list starting from index 0.
 */
message GoalList {
  
}
/**
 * Response for the `GoalList` fact.
 */
message GoalListResult {
  repeated sint32 result = 1; // all goals as a list starting from index 0
}

message GoldAmount {
  
}
message GoldAmountResult {
  int32 result = 1;
}

message HoldKohRuin {
  
}
message HoldKohRuinResult {
  bool result = 1;
}

message HoldRelics {
  
}
message HoldRelicsResult {
  bool result = 1;
}

message HousingHeadroom {
  
}
message HousingHeadroomResult {
  int32 result = 1;
}

message IdleFarmCount {
  
}
message IdleFarmCountResult {
  int32 result = 1;
}

message MapSize {
  
}
message MapSizeResult {
  int32 result = 1;
}

message MapType {
  
}
message MapTypeResult {
  int32 result = 1;
}

message MilitaryPopulation {
  
}
message MilitaryPopulationResult {
  int32 result = 1;
}

message PlayerComputer {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerComputerResult {
  bool result = 1;
}

message PlayerHuman {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerHumanResult {
  bool result = 1;
}

message PlayerInGame {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerInGameResult {
  bool result = 1;
}

message PlayerNumber {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerNumberResult {
  bool result = 1;
}

message PlayerResigned {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerResignedResult {
  bool result = 1;
}

message PlayerValid {
  int32 inPlayerAnyPlayer = 1;
}
message PlayerValidResult {
  bool result = 1;
}

message PlayersAchievements {
  int32 param1 = 1;
  int32 param2 = 2;
  int32 param3 = 3;
  int32 param4 = 4;
}
message PlayersAchievementsResult {
  bool result = 1;
}

message PlayersBuildingCount {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersBuildingCountResult {
  int32 result = 1;
}

message PlayersBuildingTypeCount {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstBuildingId = 2;
}
message PlayersBuildingTypeCountResult {
  int32 result = 1;
}

message PlayersCiv {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersCivResult {
  int32 result = 1;
}

message PlayersCivilianPopulation {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersCivilianPopulationResult {
  int32 result = 1;
}

message PlayersCurrentAge {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersCurrentAgeResult {
  int32 result = 1;
}

message PlayersCurrentAgeTime {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersCurrentAgeTimeResult {
  int32 result = 1;
}

message PlayersMilitaryPopulation {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersMilitaryPopulationResult {
  int32 result = 1;
}

message PlayersPopulation {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersPopulationResult {
  int32 result = 1;
}

message PlayersScore {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersScoreResult {
  int32 result = 1;
}

message PlayersStance {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstESPlayerStance = 2;
}
message PlayersStanceResult {
  bool result = 1;
}

message PlayersTribute {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstResource = 2;
}
message PlayersTributeResult {
  int32 result = 1;
}

message PlayersTributeMemory {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstResource = 2;
}
message PlayersTributeMemoryResult {
  int32 result = 1;
}

message PlayersUnitCount {
  int32 inPlayerAnyPlayer = 1;
}
message PlayersUnitCountResult {
  int32 result = 1;
}

message PlayersUnitTypeCount {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstUnitId = 2;
}
message PlayersUnitTypeCountResult {
  int32 result = 1;
}

message Population {
  
}
message PopulationResult {
  int32 result = 1;
}

message PopulationCap {
  
}
message PopulationCapResult {
  int32 result = 1;
}

message PopulationHeadroom {
  
}
message PopulationHeadroomResult {
  int32 result = 1;
}

message RandomNumber {
  
}
message RandomNumberResult {
  int32 result = 1;
}

message RegicideGame {
  
}
message RegicideGameResult {
  bool result = 1;
}

message ResearchAvailable {
  int32 inConstTechId = 1;
}
message ResearchAvailableResult {
  bool result = 1;
}

message ResearchCompleted {
  int32 inConstTechId = 1;
}
message ResearchCompletedResult {
  bool result = 1;
}

message ResourceFound {
  int32 inConstResource = 1;
}
message ResourceFoundResult {
  bool result = 1;
}

message SharedGoal {
  int32 inConstSharedGoalId = 1;
  int32 inConstValue = 2;
}
message SharedGoalResult {
  bool result = 1;
}

message SheepAndForageTooFar {
  
}
message SheepAndForageTooFarResult {
  bool result = 1;
}

message SoldierCount {
  
}
message SoldierCountResult {
  int32 result = 1;
}

message StanceToward {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstESPlayerStance = 2;
}
message StanceTowardResult {
  bool result = 1;
}

message StartingAge {
  
}
message StartingAgeResult {
  int32 result = 1;
}

message StartingResources {
  
}
message StartingResourcesResult {
  int32 result = 1;
}

message StoneAmount {
  
}
message StoneAmountResult {
  int32 result = 1;
}

message StrategicNumber {
  int32 inConstSnId = 1;
}
message StrategicNumberResult {
  int32 result = 1;
}

/**
 * Custom fact. Retrieve all strategic numbers as a list.
 */
message StrategicNumberList {
  
}
/**
 * Response for the `StrategicNumberList` custom fact.
 */
message StrategicNumberListResult {
  repeated int32 result = 1; // list of all strategic numbers
}

message TauntDetected {
  int32 inPlayerAnyPlayer = 1;
  int32 inConstTauntId = 2;
}
message TauntDetectedResult {
  bool result = 1;
}

message TimerTriggered {
  int32 inConstTimerId = 1;
}
message TimerTriggeredResult {
  bool result = 1;
}

message TownUnderAttack {
  
}
message TownUnderAttackResult {
  bool result = 1;
}

message TraceFact {
  int32 param = 1;
}
message TraceFactResult {
  bool result = 1;
}

message True {
  
}
message TrueResult {
  bool result = 1;
}

message UnitAvailable {
  int32 inConstUnitId = 1;
}
message UnitAvailableResult {
  bool result = 1;
}

message UnitCount {
  
}
message UnitCountResult {
  int32 result = 1;
}

message UnitCountTotal {
  
}
message UnitCountTotalResult {
  int32 result = 1;
}

message UnitTypeCount {
  int32 inConstUnitId = 1;
}
message UnitTypeCountResult {
  int32 result = 1;
}

message UnitTypeCountTotal {
  int32 inConstUnitId = 1;
}
message UnitTypeCountTotalResult {
  int32 result = 1;
}

message UpAlliedGoal {
  int32 inPlayerComputerAllyPlayer = 1;
  int32 inGoalId = 2;
}
message UpAlliedGoalResult {
  int32 result = 1;
}

message UpAlliedResourceAmount {
  int32 inPlayerAllyPlayer = 1;
  int32 inConstResourceAmount = 2;
}
message UpAlliedResourceAmountResult {
  int32 result = 1;
}

message UpAlliedResourcePercent {
  int32 inPlayerAllyPlayer = 1;
  int32 inConstResourceAmount = 2;
}
message UpAlliedResourcePercentResult {
  int32 result = 1;
}

message UpAlliedSn {
  int32 inPlayerComputerAllyPlayer = 1;
  int32 inSnId = 2;
}
message UpAlliedSnResult {
  int32 result = 1;
}

message UpAttackerClass {
  
}
message UpAttackerClassResult {
  int32 result = 1;
}

/**
 * Type operator parameter is currently ignored in AoC version.
 */
message UpBuildingTypeInTown {
  oneof buildingId {
    int32 inConstBuildingId = 1;
    int32 inGoalBuildingId = 2;
    int32 inSnBuildingId = 3;
  }
}
message UpBuildingTypeInTownResult {
  int32 result = 1;
}

message UpCanBuild {
  int32 inGoalEscrowState = 1;
  oneof buildingId {
    int32 inConstBuildingId = 2;
    int32 inGoalBuildingId = 3;
    int32 inSnBuildingId = 4;
  }
}
message UpCanBuildResult {
  bool result = 1;
}

message UpCanBuildLine {
  int32 inGoalEscrowState = 1;
  int32 inGoalPoint = 2;
  oneof buildingId {
    int32 inConstBuildingId = 3;
    int32 inGoalBuildingId = 4;
    int32 inSnBuildingId = 5;
  }
}
message UpCanBuildLineResult {
  bool result = 1;
}

message UpCanResearch {
  int32 inGoalEscrowState = 1;
  oneof techId {
    int32 inConstTechId = 2;
    int32 inGoalTechId = 3;
    int32 inSnTechId = 4;
  }
}
message UpCanResearchResult {
  bool result = 1;
}

message UpCanSearch {
  int32 inConstSearchSource = 1;
}
message UpCanSearchResult {
  bool result = 1;
}

message UpCanTrain {
  int32 inGoalEscrowState = 1;
  oneof unitId {
    int32 inConstUnitId = 2;
    int32 inGoalUnitId = 3;
    int32 inSnUnitId = 4;
  }
}
message UpCanTrainResult {
  bool result = 1;
}

message UpDefenderCount {
  
}
message UpDefenderCountResult {
  int32 result = 1;
}

message UpEnemyBuildingsInTown {
  
}
message UpEnemyBuildingsInTownResult {
  int32 result = 1;
}

message UpEnemyUnitsInTown {
  
}
message UpEnemyUnitsInTownResult {
  int32 result = 1;
}

message UpEnemyVillagersInTown {
  
}
message UpEnemyVillagersInTownResult {
  int32 result = 1;
}

message UpGaiaTypeCount {
  int32 inConstResource = 1;
}
message UpGaiaTypeCountResult {
  int32 result = 1;
}

message UpGaiaTypeCountTotal {
  int32 inConstResource = 1;
}
message UpGaiaTypeCountTotalResult {
  int32 result = 1;
}

message UpGroupSize {
  oneof groupId {
    int32 inConstGroupId = 1;
    int32 inGoalGroupId = 2;
    int32 inSnGroupId = 3;
  }
}
message UpGroupSizeResult {
  int32 result = 1;
}

message UpIdleUnitCount {
  int32 inConstIdleType = 1;
}
message UpIdleUnitCountResult {
  int32 result = 1;
}

message UpObjectData {
  int32 inConstObjectData = 1;
}
message UpObjectDataResult {
  int32 result = 1;
}

/**
 * Custom fact. Retrieve current target object's all data values as a list.
 */
message UpObjectDataList {
  
}
/**
 * Response for the `UpObjectDataList` custom fact.
 */
message UpObjectDataListResult {
  repeated int32 result = 1; // list of all current target object's data values
}

message UpObjectTargetData {
  int32 inConstObjectData = 1;
}
message UpObjectTargetDataResult {
  int32 result = 1;
}

message UpObjectTypeCount {
  oneof objectId {
    int32 inConstObjectId = 1;
    int32 inGoalObjectId = 2;
    int32 inSnObjectId = 3;
  }
}
message UpObjectTypeCountResult {
  int32 result = 1;
}

message UpObjectTypeCountTotal {
  oneof objectId {
    int32 inConstObjectId = 1;
    int32 inGoalObjectId = 2;
    int32 inSnObjectId = 3;
  }
}
message UpObjectTypeCountTotalResult {
  int32 result = 1;
}

message UpPathDistance {
  int32 inGoalPoint = 1;
  int32 inConstStrict = 2;
}
message UpPathDistanceResult {
  int32 result = 1;
}

message UpPendingObjects {
  oneof objectId {
    int32 inConstObjectId = 1;
    int32 inGoalObjectId = 2;
    int32 inSnObjectId = 3;
  }
}
message UpPendingObjectsResult {
  int32 result = 1;
}

message UpPendingPlacement {
  oneof buildingId {
    int32 inConstBuildingId = 1;
    int32 inGoalBuildingId = 2;
    int32 inSnBuildingId = 3;
  }
}
message UpPendingPlacementResult {
  bool result = 1;
}

message UpPlayerDistance {
  int32 inPlayerAnyPlayer = 1;
}
message UpPlayerDistanceResult {
  int32 result = 1;
}

message UpPlayersInGame {
  int32 inConstPlayerStance = 1;
}
message UpPlayersInGameResult {
  int32 result = 1;
}

message UpPointContains {
  int32 inGoalPoint = 1;
  oneof objectId {
    int32 inConstObjectId = 2;
    int32 inGoalObjectId = 3;
    int32 inSnObjectId = 4;
  }
}
message UpPointContainsResult {
  bool result = 1;
}

message UpPointDistance {
  int32 inGoalPoint1 = 1;
  int32 inGoalPoint2 = 2;
}
message UpPointDistanceResult {
  int32 result = 1;
}

message UpPointElevation {
  int32 inGoalPoint = 1;
}
message UpPointElevationResult {
  int32 result = 1;
}

message UpPointExplored {
  int32 inGoalPoint = 1;
}
message UpPointExploredResult {
  int32 result = 1;
}

message UpPointTerrain {
  int32 inGoalPoint = 1;
}
message UpPointTerrainResult {
  int32 result = 1;
}

message UpPointZone {
  int32 inGoalPoint = 1;
}
message UpPointZoneResult {
  int32 result = 1;
}

message UpProjectileDetected {
  int32 inConstProjectileType = 1;
}
message UpProjectileDetectedResult {
  int32 result = 1;
}

message UpProjectileTarget {
  int32 inConstProjectileType = 1;
}
message UpProjectileTargetResult {
  int32 result = 1;
}

message UpRemainingBoarAmount {
  
}
message UpRemainingBoarAmountResult {
  int32 result = 1;
}

message UpResearchStatus {
  oneof techId {
    int32 inConstTechId = 1;
    int32 inGoalTechId = 2;
    int32 inSnTechId = 3;
  }
}
message UpResearchStatusResult {
  int32 result = 1;
}

message UpResourceAmount {
  int32 inConstResourceAmount = 1;
}
message UpResourceAmountResult {
  int32 result = 1;
}

message UpResourcePercent {
  int32 inConstResourceAmount = 1;
}
message UpResourcePercentResult {
  int32 result = 1;
}

/**
 * Custom fact. Retrieve a list of object IDs in the specified search source.
 * Note that if there is no target object set before calling this function, it
 * may set one itself.
 */
message UpSearchObjectIdList {
  int32 inConstSearchSource = 1;
}
/**
 * Response for the `UpSearchObjectIdList` custom fact.
 */
message UpSearchObjectIdListResult {
  repeated int32 result = 1; // list of objects' IDs that are in a specified search source
}

message UpTimerStatus {
  int32 inConstTimerId = 1;
}
message UpTimerStatusResult {
  int32 result = 1;
}

message UpTrainSiteReady {
  oneof unitId {
    int32 inConstUnitId = 1;
    int32 inGoalUnitId = 2;
    int32 inSnUnitId = 3;
  }
}
message UpTrainSiteReadyResult {
  bool result = 1;
}

message UpUnitTypeInTown {
  oneof unitId {
    int32 inConstUnitId = 1;
    int32 inGoalUnitId = 2;
    int32 inSnUnitId = 3;
  }
}
message UpUnitTypeInTownResult {
  int32 result = 1;
}

message UpVillagerTypeInTown {
  oneof unitId {
    int32 inConstUnitId = 1;
    int32 inGoalUnitId = 2;
    int32 inSnUnitId = 3;
  }
}
message UpVillagerTypeInTownResult {
  int32 result = 1;
}

message VictoryCondition {
  int32 inConstVictory = 1;
}
message VictoryConditionResult {
  bool result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message WallCompletedPercentage {
  int32 inConstPerimeter = 1;
}
/**
 * Currently unimplemented in AoC version.
 */
message WallCompletedPercentageResult {
  int32 result = 1;
}

/**
 * Currently unimplemented in AoC version.
 */
message WallInvisiblePercentage {
  int32 inConstPerimeter = 1;
}
/**
 * Currently unimplemented in AoC version.
 */
message WallInvisiblePercentageResult {
  int32 result = 1;
}

message WarboatCount {
  
}
message WarboatCountResult {
  int32 result = 1;
}

message WoodAmount {
  
}
message WoodAmountResult {
  int32 result = 1;
}

message ModMapDimensions {
  
}
message ModMapDimensionsResult {
  int32 width = 1;
  int32 height = 2;
}

message ModMapTiles {
  
}
message ModMapTilesResult {
  int32 mapWidth = 1;
  int32 mapHeight = 2;
  repeated Tile tiles = 3;
}
message Tile {
  int32 x = 1;
  int32 y = 2;
  int32 height = 3;
  int32 terrain = 4;
  int32 visibility = 5;
}
